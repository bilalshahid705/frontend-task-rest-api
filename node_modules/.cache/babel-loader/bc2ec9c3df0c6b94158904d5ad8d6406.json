{"ast":null,"code":"var _jsxFileName = \"/Users/bilalshahid/Desktop/frontend-json-api/src/components/PowerPlants/PowerPlantsData.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styles from './PowerPlantsData.module.css';\n\nclass PowerPlantsData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getFetch = () => {\n      fetch('http://localhost:8081/power-plants').then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    };\n\n    this.renderLoading = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: true,\n      searchString: null\n    };\n  } // Loop through API\n\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      time: Date.now() + 10\n    }), 1000);\n    this.getFetch();\n  }\n\n  componentDidUpdate() {\n    clearInterval(this.interval);\n  }\n\n  // renderData = (items) => {\n  //     return (\n  //     )}\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items,\n        searchString = _this$state.searchString; // if(!isLoaded){\n    //     return this.renderLoading;\n    // }\n    // else\n    // { \n\n    const inffpp = items.filter(data => {\n      if (searchString == null) return data;else if (data.type.toLowerCase().includes(searchString.toLowerCase())) {\n        return data;\n      }\n    }).map(data => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.PowerPlanet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Federal Network Agency Number\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Postal Code\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Net Nominal Power MegaWatt\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, items.map(item => {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, item.bundesnetzagentur_number), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, item.name), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, item.company_name), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, item.plz), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, item.city), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, item.address), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, item.state), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, item.start_date), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, item.status), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, item.type), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, item.net_nominal_power_mw));\n      })))));\n    }); // }\n  }\n\n}\n\nexport default PowerPlantsData;","map":{"version":3,"sources":["/Users/bilalshahid/Desktop/frontend-json-api/src/components/PowerPlants/PowerPlantsData.js"],"names":["React","Component","Table","styles","PowerPlantsData","constructor","props","getFetch","fetch","then","res","json","setState","isLoaded","items","renderLoading","state","searchString","componentDidMount","interval","setInterval","time","Date","now","componentDidUpdate","clearInterval","render","inffpp","filter","data","type","toLowerCase","includes","map","PowerPlanet","TableTop","item","bundesnetzagentur_number","name","company_name","plz","city","address","start_date","status","net_nominal_power_mw"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styles from './PowerPlantsData.module.css';\n\n\nclass PowerPlantsData extends Component {\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            items: [],\n            isLoaded: true,\n            searchString: null\n        };\n    }\n    // Loop through API\n    componentDidMount(){\n        this.interval = setInterval(() => this.setState({ time: Date.now() + 10 }), 1000);\n        this.getFetch();\n    }\n\n    componentDidUpdate(){\n        clearInterval(this.interval);\n    }\n\n    getFetch = () => {\n        \n        fetch('http://localhost:8081/power-plants')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    items: json\n                })\n\n            });\n    }\n\n    renderLoading = () => {\n        return <div>Loading...</div>;\n    }\n    // renderData = (items) => {\n    //     return (\n\n            \n                 \n                   \n    //     )}\n\n    render () {\n\n        let { isLoaded, items, searchString } = this.state;\n\n        // if(!isLoaded){\n        //     return this.renderLoading;\n        // }\n        // else\n        // { \n            const inffpp = items.filter((data)=>{\n                if(searchString == null)\n                    return data\n                else if(data.type.toLowerCase().includes(searchString.toLowerCase()) ){\n                    return data\n                }\n              }).map(data=>{\n                return(\n                <div>\n                \n                    <div className = {styles.PowerPlanet}>\n                        <Table>\n                            <tbody>\n                                <tr>\n                                    <th className = {styles.TableTop}>Federal Network Agency Number</th>\n                                    <th className = {styles.TableTop}>Name</th>\n                                    <th className = {styles.TableTop}>Company Name</th>\n                                    <th className = {styles.TableTop}>Postal Code</th>\n                                    <th className = {styles.TableTop}>City</th>\n                                    <th className = {styles.TableTop}>Address</th>\n                                    <th className = {styles.TableTop}>State</th>\n                                    <th className = {styles.TableTop}>Start Date</th>\n                                    <th className = {styles.TableTop}>Status</th>\n                                    <th className = {styles.TableTop}>Type</th>\n                                    <th className = {styles.TableTop}>Net Nominal Power MegaWatt</th>\n                                </tr>\n                            </tbody>\n                            <tbody>\n                                {items.map((item) => {\n                                    return (\n                                        <tr>\n                                            <td className = {styles.TableTop}>{item.bundesnetzagentur_number}</td>\n                                            <td className = {styles.TableTop}>{item.name}</td>\n                                            <td className = {styles.TableTop}>{item.company_name}</td>\n                                            <td className = {styles.TableTop}>{item.plz}</td>\n                                            <td className = {styles.TableTop}>{item.city}</td>\n                                            <td className = {styles.TableTop}>{item.address}</td>\n                                            <td className = {styles.TableTop}>{item.state}</td>\n                                            <td className = {styles.TableTop}>{item.start_date}</td>\n                                            <td className = {styles.TableTop}>{item.status}</td>\n                                            <td className = {styles.TableTop}>{item.type}</td>\n                                            <td className = {styles.TableTop}>{item.net_nominal_power_mw}</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </Table>\n                    </div>  \n                </div>\n                )\n              })\n            \n        // }\n\n    }\n}\n\nexport default PowerPlantsData;\n"]},"metadata":{},"sourceType":"module"}