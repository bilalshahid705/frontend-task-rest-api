{"ast":null,"code":"var _jsxFileName = \"/Users/bilalshahid/Desktop/frontend-json-api/src/containers/PowerPlants.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass PowerPlants extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: true\n    };\n  }\n\n  componentDidMount() {\n    // this.interval = setInterval(() => this.setState({ time: Date.now() + 10 }), 1000);\n    this.getFetch();\n  }\n\n  componentDidUpdate() {// clearInterval(this.interval);\n    // if(this.state.isOneTime){\n    //     this.setState(state => ({\n    //         isOneTime: false\n    //       }));\n    //     console.log(this.state.isOneTime);\n    //     this.getFetch();\n    // }\n  }\n\n  getFetch() {\n    fetch('./data/power-plants.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Name: \", item.name, \" | Postal Code: \", item.plz, \" | City: \", item.city)), \";\"));\n    }\n  }\n\n}\n\nexport default PowerPlants;","map":{"version":3,"sources":["/Users/bilalshahid/Desktop/frontend-json-api/src/containers/PowerPlants.js"],"names":["React","Component","axios","PowerPlants","constructor","props","state","items","isLoaded","componentDidMount","getFetch","componentDidUpdate","fetch","headers","then","res","json","setState","render","map","item","name","plz","city"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAEhCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKC,QAAL;AACH;;AAEDC,EAAAA,kBAAkB,GAAE,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACH;;AAEDD,EAAAA,QAAQ,GAAE;AACNE,IAAAA,KAAK,CAAC,0BAAD,EAA6B;AAC9BC,MAAAA,OAAO,EAAG;AACN,wBAAgB,kBADV;AAEN,kBAAU;AAFJ;AADoB,KAA7B,CAAL,CAMKC,IANL,CAMUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANjB,EAOKF,IAPL,CAOUE,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVT,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA,KAAK,EAAES;AAFG,OAAd;AAIH,KAZL;AAaH;;AAEDE,EAAAA,MAAM,GAAI;AAAA,sBAEoB,KAAKZ,KAFzB;AAAA,QAEAE,QAFA,eAEAA,QAFA;AAAA,QAEUD,KAFV,eAEUA,KAFV;;AAKN,QAAG,CAACC,QAAJ,EAAa;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAIA;AACI,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACY,GAAN,CAAUC,IAAI,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWA,IAAI,CAACC,IADhB,sBACsCD,IAAI,CAACE,GAD3C,eACyDF,IAAI,CAACG,IAD9D,CADH,CADL,MAFJ,CADJ;AAaH;AAIJ;;AAxE+B;;AA2EpC,eAAepB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\nclass PowerPlants extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            items: [],\n            isLoaded: true,\n            \n        };\n    }\n\n    componentDidMount(){\n        // this.interval = setInterval(() => this.setState({ time: Date.now() + 10 }), 1000);\n        this.getFetch();\n    }\n\n    componentDidUpdate(){\n        // clearInterval(this.interval);\n        // if(this.state.isOneTime){\n        //     this.setState(state => ({\n        //         isOneTime: false\n        //       }));\n        //     console.log(this.state.isOneTime);\n        //     this.getFetch();\n\n        // }\n    }\n\n    getFetch(){\n        fetch('./data/power-plants.json', {\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n               }\n        })\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    items: json,\n                })\n            });\n    }\n    \n    render () {\n\n        var { isLoaded, items } = this.state;\n\n\n        if(!isLoaded){\n            return <div>Loading...</div>;\n        }\n        else\n        {   \n            return (\n                <div>\n                    \n                    <ul>\n                        {items.map(item => (\n                            <li>\n                                Name: {item.name} | Postal Code: {item.plz} | City: {item.city}\n                            </li>\n                        ))};\n                    </ul>\n\n                </div>\n            );\n        }\n\n        \n    \n    }\n}\n\nexport default PowerPlants;"]},"metadata":{},"sourceType":"module"}