{"ast":null,"code":"var _jsxFileName = \"/Users/bilalshahid/Desktop/frontend-json-api/src/components/PowerPlants/PowerPlantsData.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styles from './PowerPlantsData.module.css';\nconst options = [{\n  value: 'WIND_ONSHORE',\n  label: 'Wind'\n}, {\n  value: 'BIOMASS',\n  label: 'Biomass'\n}, {\n  value: 'HYDRO',\n  label: 'Hydro'\n}, {\n  value: null,\n  label: 'All'\n}];\n\nclass PowerPlantsData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getFetch = () => {\n      fetch('http://localhost:8081/power-plants').then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: true,\n      searchString: null\n    };\n  } // Loop through API\n\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      time: Date.now() + 10\n    }), 1000);\n    this.getFetch();\n  }\n\n  componentDidUpdate() {\n    clearInterval(this.interval);\n  }\n\n  handleChange(event) {}\n\n  render() {\n    let _this$state = this.state,\n        items = _this$state.items,\n        searchString = _this$state.searchString;\n    return items.filter(data => {\n      if (searchString == null) return data;else if (data.type.toLowerCase().includes(searchString.toLowerCase())) {\n        return data;\n      }\n    }).map(data => {\n      return React.createElement(\"div\", {\n        className: styles.PowerPlanet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Federal Network Agency Number\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Postal Code\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Net Nominal Power MegaWatt\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, data.bundesnetzagentur_number), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, data.name), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, data.company_name), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, data.plz), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, data.city), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, data.address), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, data.state), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, data.start_date), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, data.status), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, data.type), React.createElement(\"td\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, data.net_nominal_power_mw)))));\n    });\n  }\n\n}\n\nexport default PowerPlantsData;","map":{"version":3,"sources":["/Users/bilalshahid/Desktop/frontend-json-api/src/components/PowerPlants/PowerPlantsData.js"],"names":["React","Component","Table","styles","options","value","label","PowerPlantsData","constructor","props","getFetch","fetch","then","res","json","setState","isLoaded","items","state","searchString","componentDidMount","interval","setInterval","time","Date","now","componentDidUpdate","clearInterval","handleChange","event","render","filter","data","type","toLowerCase","includes","map","PowerPlanet","TableTop","bundesnetzagentur_number","name","company_name","plz","city","address","start_date","status","net_nominal_power_mw"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styles from './PowerPlantsData.module.css';\n\nconst options = [\n    { value: 'WIND_ONSHORE', label: 'Wind' },\n    { value: 'BIOMASS', label: 'Biomass' },\n    { value: 'HYDRO', label: 'Hydro' },\n    { value: null , label: 'All' }\n  ];\n\nclass PowerPlantsData extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            items: [],\n            isLoaded: true,\n            searchString: null\n        };\n    }\n    // Loop through API\n    componentDidMount(){\n        this.interval = setInterval(() => this.setState({ time: Date.now() + 10 }), 1000);\n        this.getFetch();\n    }\n\n    componentDidUpdate(){\n        clearInterval(this.interval);\n    }\n\n    getFetch = () => {\n        \n        fetch('http://localhost:8081/power-plants')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    items: json\n                })\n\n            });\n    }\n    handleChange (event){\n        \n    }\n\n    render () {\n\n        let { items, searchString } = this.state;\n\n            return(\n                items.filter((data) => {\n                    if(searchString == null)\n                        return data;\n                    else if(data.type.toLowerCase().includes(searchString.toLowerCase())){\n                        return data;\n                    }\n                  }).map(data => {\n                    return(\n                        <div className = {styles.PowerPlanet}>\n                            <Table>\n                                <tbody>\n                                    <tr>\n                                        <th className = {styles.TableTop}>Federal Network Agency Number</th>\n                                        <th className = {styles.TableTop}>Name</th>\n                                        <th className = {styles.TableTop}>Company Name</th>\n                                        <th className = {styles.TableTop}>Postal Code</th>\n                                        <th className = {styles.TableTop}>City</th>\n                                        <th className = {styles.TableTop}>Address</th>\n                                        <th className = {styles.TableTop}>State</th>\n                                        <th className = {styles.TableTop}>Start Date</th>\n                                        <th className = {styles.TableTop}>Status</th>\n                                        <th className = {styles.TableTop}>Type</th>\n                                        <th className = {styles.TableTop}>Net Nominal Power MegaWatt</th>\n                                    </tr>\n                                </tbody>\n                                <tbody>\n                                    <tr>\n                                        <td className = {styles.TableTop}>{data.bundesnetzagentur_number}</td>\n                                        <td className = {styles.TableTop}>{data.name}</td>\n                                        <td className = {styles.TableTop}>{data.company_name}</td>\n                                        <td className = {styles.TableTop}>{data.plz}</td>\n                                        <td className = {styles.TableTop}>{data.city}</td>\n                                        <td className = {styles.TableTop}>{data.address}</td>\n                                        <td className = {styles.TableTop}>{data.state}</td>\n                                        <td className = {styles.TableTop}>{data.start_date}</td>\n                                        <td className = {styles.TableTop}>{data.status}</td>\n                                        <td className = {styles.TableTop}>{data.type}</td>\n                                        <td className = {styles.TableTop}>{data.net_nominal_power_mw}</td>\n                                    </tr>          \n                                </tbody>\n                            </Table>\n                        </div>  \n                    )\n                  }\n                )\n            )\n    }\n}\n\nexport default PowerPlantsData;\n"]},"metadata":{},"sourceType":"module"}