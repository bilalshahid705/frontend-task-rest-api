{"ast":null,"code":"var _jsxFileName = \"/Users/bilalshahid/Desktop/frontend-json-api/src/components/PowerPlants/PowerPlantsData.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styles from './PowerPlantsData.module.css';\n\nclass PowerPlantsData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getFetch = () => {\n      fetch('http://localhost:8081/power-plants').then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    };\n\n    this.renderLoading = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    this.renderData = items => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.PowerPlanet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Federal Network Agency Number\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Postal Code\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Net Nominal Power MegaWatt\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, items.map(item => {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, item.bundesnetzagentur_number), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, item.name), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, item.company_name), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, item.plz), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, item.city), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, item.address), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, item.state), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, item.start_date), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, item.status), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, item.type), React.createElement(\"td\", {\n          className: styles.TableTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, item.net_nominal_power_mw));\n      })))));\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: true,\n      searchString: null\n    };\n  } // Loop through API\n\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      time: Date.now() + 10\n    }), 1000);\n    this.getFetch();\n  }\n\n  componentDidUpdate() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items,\n        searchString = _this$state.searchString; // if(!isLoaded){\n    //     return (this.renderLoading);\n    // }\n    // else\n    // { \n\n    return items.filter(data => {\n      if (searchString == null) return this.setState.renderData(data);else if (data.type.toLowerCase().includes(searchString.toLowerCase())) {\n        return this.renderData(data);\n      }\n    }); // }\n  }\n\n}\n\nexport default PowerPlantsData;","map":{"version":3,"sources":["/Users/bilalshahid/Desktop/frontend-json-api/src/components/PowerPlants/PowerPlantsData.js"],"names":["React","Component","Table","styles","PowerPlantsData","constructor","props","getFetch","fetch","then","res","json","setState","isLoaded","items","renderLoading","renderData","PowerPlanet","TableTop","map","item","bundesnetzagentur_number","name","company_name","plz","city","address","state","start_date","status","type","net_nominal_power_mw","searchString","componentDidMount","interval","setInterval","time","Date","now","componentDidUpdate","clearInterval","render","filter","data","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styles from './PowerPlantsData.module.css';\n\n\nclass PowerPlantsData extends Component {\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            items: [],\n            isLoaded: true,\n            searchString: null\n        };\n    }\n    // Loop through API\n    componentDidMount(){\n        this.interval = setInterval(() => this.setState({ time: Date.now() + 10 }), 1000);\n        this.getFetch();\n    }\n\n    componentDidUpdate(){\n        clearInterval(this.interval);\n    }\n\n    getFetch = () => {\n        \n        fetch('http://localhost:8081/power-plants')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    items: json\n                })\n\n            });\n    }\n\n    renderLoading = () => {\n        return <div>Loading...</div>;\n    }\n    renderData = (items) => {\n        return (\n\n            <div>\n                \n                <div className = {styles.PowerPlanet}>\n                    <Table>\n                        <tbody>\n                            <tr>\n                                <th className = {styles.TableTop}>Federal Network Agency Number</th>\n                                <th className = {styles.TableTop}>Name</th>\n                                <th className = {styles.TableTop}>Company Name</th>\n                                <th className = {styles.TableTop}>Postal Code</th>\n                                <th className = {styles.TableTop}>City</th>\n                                <th className = {styles.TableTop}>Address</th>\n                                <th className = {styles.TableTop}>State</th>\n                                <th className = {styles.TableTop}>Start Date</th>\n                                <th className = {styles.TableTop}>Status</th>\n                                <th className = {styles.TableTop}>Type</th>\n                                <th className = {styles.TableTop}>Net Nominal Power MegaWatt</th>\n                            </tr>\n                        </tbody>\n                        <tbody>\n                            {items.map((item) => {\n                                return (\n                                    <tr>\n                                        <td className = {styles.TableTop}>{item.bundesnetzagentur_number}</td>\n                                        <td className = {styles.TableTop}>{item.name}</td>\n                                        <td className = {styles.TableTop}>{item.company_name}</td>\n                                        <td className = {styles.TableTop}>{item.plz}</td>\n                                        <td className = {styles.TableTop}>{item.city}</td>\n                                        <td className = {styles.TableTop}>{item.address}</td>\n                                        <td className = {styles.TableTop}>{item.state}</td>\n                                        <td className = {styles.TableTop}>{item.start_date}</td>\n                                        <td className = {styles.TableTop}>{item.status}</td>\n                                        <td className = {styles.TableTop}>{item.type}</td>\n                                        <td className = {styles.TableTop}>{item.net_nominal_power_mw}</td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </Table>\n                </div>  \n            </div>\n                 \n                   \n        )}\n\n    render () {\n\n        let { isLoaded, items, searchString } = this.state;\n\n        // if(!isLoaded){\n        //     return (this.renderLoading);\n        // }\n        // else\n        // { \n            return(\n                items.filter((data)=>{\n                    if(searchString == null)\n                        return (this.setState.renderData(data));\n                    else if(data.type.toLowerCase().includes(searchString.toLowerCase())){\n                        return (this.renderData(data));\n                    }\n                  })\n            )\n            \n            \n        // }\n\n    }\n}\n\nexport default PowerPlantsData;\n"]},"metadata":{},"sourceType":"module"}