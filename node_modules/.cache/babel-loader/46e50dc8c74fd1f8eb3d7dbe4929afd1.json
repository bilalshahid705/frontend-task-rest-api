{"ast":null,"code":"var _jsxFileName = \"/Users/bilalshahid/Desktop/frontend-json-api/src/PowerPlantsData.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\n\nclass PowerPlantsData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: true\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      time: Date.now() + 10\n    }), 1000);\n    this.getFetch();\n  }\n\n  componentDidUpdate() {\n    clearInterval(this.interval);\n  }\n\n  getFetch() {\n    fetch('http://localhost:8081/power-plants').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  generateTableData() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n    React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Company Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Postal Code\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"City\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, items.map(item => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, item.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, item.company_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.plz), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, item.city));\n    })));\n  }\n\n  render() {\n    // if(!isLoaded){\n    //     return <div>Loading...</div>;\n    // }\n    // else\n    // {   \n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.generateTableData);\n  }\n\n}\n\nexport default PowerPlantsData;","map":{"version":3,"sources":["/Users/bilalshahid/Desktop/frontend-json-api/src/PowerPlantsData.js"],"names":["React","Component","Table","PowerPlantsData","constructor","props","state","items","isLoaded","componentDidMount","interval","setInterval","setState","time","Date","now","getFetch","componentDidUpdate","clearInterval","fetch","then","res","json","generateTableData","map","item","name","company_name","plz","city","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AAEpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKC,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,KAAa;AAArB,KAAd,CAAP,EAAiD,IAAjD,CAA3B;AACA,SAAKC,QAAL;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,aAAa,CAAC,KAAKR,QAAN,CAAb;AACH;;AAEDM,EAAAA,QAAQ,GAAE;AAENG,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,WAAKV,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA,KAAK,EAAEe;AAFG,OAAd;AAIH,KAPL;AAQH;;AAEDC,EAAAA,iBAAiB,GAAE;AAAA,sBAEW,KAAKjB,KAFhB;AAAA,QAETE,QAFS,eAETA,QAFS;AAAA,QAECD,KAFD,eAECA,KAFD;AAIf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,CAACiB,GAAN,CAAWC,IAAD,IAAU;AACjB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACC,IAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,YAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,GAAV,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,IAAI,CAACI,IAAV,CAJJ,CADJ;AAQH,KATA,CADL,CAPJ;AAoBH;;AAEDC,EAAAA,MAAM,GAAI;AAKN;AACA;AACA;AACA;AACA;AACI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKP,iBAFV,CADJ;AAOP;;AA5EmC;;AA+ExC,eAAepB,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table'\n\nclass PowerPlantsData extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            items: [],\n            isLoaded: true,\n            \n        };\n    }\n\n    componentDidMount(){\n        this.interval = setInterval(() => this.setState({ time: Date.now() + 10 }), 1000);\n        this.getFetch();\n    }\n\n    componentDidUpdate(){\n        clearInterval(this.interval);\n    }\n\n    getFetch(){\n        \n        fetch('http://localhost:8081/power-plants')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    items: json,\n                })\n            });\n    }\n    \n    generateTableData(){\n        \n        var { isLoaded, items } = this.state;\n\n        <table>\n            <thead>\n                <th>Name</th>\n                <th>Company Name</th>\n                <th>Postal Code</th>\n                <th>City</th>\n            </thead>\n            <tbody>\n                {items.map((item) => {\n                    return (\n                        <tr>\n                            <td>{item.name}</td>\n                            <td>{item.company_name}</td>\n                            <td>{item.plz}</td>\n                            <td>{item.city}</td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    }\n\n    render () {\n\n        \n\n\n        // if(!isLoaded){\n        //     return <div>Loading...</div>;\n        // }\n        // else\n        // {   \n            return (\n                <div>\n                    \n                    {this.generateTableData}\n                </div>\n            );\n\n    }\n}\n\nexport default PowerPlantsData;"]},"metadata":{},"sourceType":"module"}