{"ast":null,"code":"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass PowerPlants extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      isOneTime: false,\n      variant: 'primary'\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFetch();\n  } // componentDidUpdate(){\n  //     if(this.state.isOneTime){\n  //         this.setState(state => ({\n  //             isOneTime: false\n  //           }));\n  //         console.log(this.state.isOneTime);\n  //         this.getFetch();\n  //     }\n  // }\n\n\n  getFetch() {}\n\n  render() {// return (\n    // );\n  }\n\n}\n\nexport default PowerPlants;","map":{"version":3,"sources":["/Users/bilalshahid/Desktop/frontend-json-api/src/containers/PowerPlants.js"],"names":["React","Component","axios","PowerPlants","constructor","props","state","posts","isOneTime","variant","handleClick","bind","componentDidMount","getFetch","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAEhCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAOA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL;AACH,GAhB+B,CAkBhC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEAA,EAAAA,QAAQ,GAAE,CAET;;AAEDC,EAAAA,MAAM,GAAI,CAEN;AAEA;AACH;;AAtC+B;;AAyCpC,eAAeX,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass PowerPlants extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            posts: [],\n            isOneTime: false,\n            variant: 'primary'\n            \n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount(){\n        this.getFetch();\n    }\n\n    // componentDidUpdate(){\n    //     if(this.state.isOneTime){\n    //         this.setState(state => ({\n    //             isOneTime: false\n    //           }));\n    //         console.log(this.state.isOneTime);\n    //         this.getFetch();\n\n    //     }\n    // }\n\n    getFetch(){\n        \n    }\n    \n    render () {\n\n        // return (\n            \n        // );\n    }\n}\n\nexport default PowerPlants;"]},"metadata":{},"sourceType":"module"}