{"ast":null,"code":"var _jsxFileName = \"/Users/bilalshahid/Desktop/frontend-json-api/src/components/PowerPlants/PowerPlantsData.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styles from './PowerPlantsData.module.css';\nimport { Item } from 'react-bootstrap/lib/Breadcrumb';\n\nclass PowerPlantsData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: true\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      time: Date.now() + 10\n    }), 1000);\n    this.getFetch();\n  }\n\n  componentDidUpdate() {\n    clearInterval(this.interval);\n  }\n\n  getFetch() {\n    fetch('http://localhost:8081/power-plants').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      this.renderLoading;\n    } else {\n      this.renderData(items);\n    }\n  }\n\n  renderData(data) {\n    if (data && data.length) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        variant: \"light\",\n        striped: true,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Federal Network Agency Number\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Postal Code\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Address\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        className: styles.TableTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Net Nominal Power MegaWatt\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, data.map(data => {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, data.bundesnetzagentur_number), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, data.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, data.company_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, data.plz), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, data.city), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, data.address), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, data.state), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, data.start_date), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, data.status), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, data.type), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, data.net_nominal_power_mw));\n      })))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"No items found\");\n    }\n  }\n\n  renderLoading() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\nexport default PowerPlantsData;","map":{"version":3,"sources":["/Users/bilalshahid/Desktop/frontend-json-api/src/components/PowerPlants/PowerPlantsData.js"],"names":["React","Component","Table","styles","Item","PowerPlantsData","constructor","props","state","items","isLoaded","componentDidMount","interval","setInterval","setState","time","Date","now","getFetch","componentDidUpdate","clearInterval","fetch","then","res","json","render","renderLoading","renderData","data","length","TableTop","map","bundesnetzagentur_number","name","company_name","plz","city","address","start_date","status","type","net_nominal_power_mw"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport styles from './PowerPlantsData.module.css';\nimport { Item } from 'react-bootstrap/lib/Breadcrumb';\n\nclass PowerPlantsData extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            \n            items: [],\n            isLoaded: true\n        };\n    }\n\n    componentDidMount(){\n        this.interval = setInterval(() => this.setState({ time: Date.now() + 10 }), 1000);\n        this.getFetch();\n    }\n\n    componentDidUpdate(){\n        clearInterval(this.interval);\n    }\n\n    getFetch(){\n        \n        fetch('http://localhost:8081/power-plants')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    items: json,\n                })\n            });\n    }\n\n    render () {\n\n        let { isLoaded, items } = this.state;\n\n        if(!isLoaded){\n            this.renderLoading\n        }\n        else\n        {   \n            this.renderData (items)\n        }\n\n    }\n    renderData(data){\n        if(data && data.length) {\n            return (\n                <div>\n                    <div variant=\"light\" striped bordered>\n                        <Table>\n                            <thead>\n                                <th className = {styles.TableTop}>Federal Network Agency Number</th>\n                                <th className = {styles.TableTop}>Name</th>\n                                <th className = {styles.TableTop}>Company Name</th>\n                                <th className = {styles.TableTop}>Postal Code</th>\n                                <th className = {styles.TableTop}>City</th>\n                                <th className = {styles.TableTop}>Address</th>\n                                <th className = {styles.TableTop}>State</th>\n                                <th className = {styles.TableTop}>Start Date</th>\n                                <th className = {styles.TableTop}>Status</th>\n                                <th className = {styles.TableTop}>Type</th>\n                                <th className = {styles.TableTop}>Net Nominal Power MegaWatt</th>\n\n                            </thead>\n                            <tbody>\n                                {data.map((data) => {\n                                    return (\n                                        <tr>\n                                            <td>{data.bundesnetzagentur_number}</td>\n                                            <td>{data.name}</td>\n                                            <td>{data.company_name}</td>\n                                            <td>{data.plz}</td>\n                                            <td>{data.city}</td>\n                                            <td>{data.address}</td>\n                                            <td>{data.state}</td>\n                                            <td>{data.start_date}</td>\n                                            <td>{data.status}</td>\n                                            <td>{data.type}</td>\n                                            <td>{data.net_nominal_power_mw}</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </Table>\n                    </div>              \n                </div>\n            );\n        }\n        else\n        {\n            return <div>No items found</div>\n        }\n\n    }\n\n    renderLoading() {\n        return <div>Loading...</div>;\n    }\n\n}\n\nexport default PowerPlantsData;"]},"metadata":{},"sourceType":"module"}